<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Work around issues in MSBuild versions prior to 16.0. -->
  <PropertyGroup>
    <MSBuildAllProjects Condition=" '$(MSBuildVersion)' == '' Or '$(MSBuildVersion)' &lt; '16.0' ">
      $(MSBuildAllProjects);$(MSBuildThisFileFullPath)
    </MSBuildAllProjects>
  </PropertyGroup>


  <!-- Unless otherwise specified, all Q# files in the project folder are included in the compilation. -->
  <ItemGroup>
    <!-- TODO: check excluding Q# files from compilation -->
    <!-- TODO: check if including files explicitly from a user project works fine -->
    <QsharpCompile Include="**\*.qs" Exclude="obj\**" />
  </ItemGroup>

  <!-- Packages containing rewrite steps that are executed during compilation. -->
  <ItemGroup>
    <!-- for backwards compatibility we still generate C# independent on whether the project is targeted for execution on the simulation framework or not -->
    <QscPackageReference Include="Microsoft.Quantum.CsharpGeneration" Version="0.10.1911.1607" /> <!-- TODO: check that our release build replaces the version correctly -->
    <!-- FIXME: WE SHOULD PROBABLY EXECUTE THIS AT THE END OF THE COMPILATION PROCESS -->
  </ItemGroup>

  <!-- Packages and libraries included for all execution targets. -->
  <ItemGroup>
    <!-- TODO: Core & Intrinsics package -->
    <PackageReference Include="Microsoft.Quantum.Standard" Version="0.10.1911.1607" IsImplicitlyDefined="true" /> <!-- TODO: check that our release build replaces the version correctly -->
  </ItemGroup>


  <!-- Reference resolution for packages and projects that define rewrite steps to execute during Q# compilation. -->
  <Target Name="QscReferences" DependsOnTargets="QsharpPropertyResolution" BeforeTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <PackageReference Include="%(QscPackageReference.Identity)" Version="%(QscPackageReference.Version)" IsImplicitlyDefined="true" GeneratePathProperty="true" />
      <ProjectReference Include="%(QscProjectReference.Identity)" Version="%(QscProjectReference.Version)" IsImplicitlyDefined="true" GeneratePathProperty="true" /> <!-- FIXME: not sure if this works for project references -->
    </ItemGroup>
  </Target>   

  <!-- Packages and libraries included conditional on resolved Q# properties. -->
  <Target Name="QsharpTargetDependentReferences" DependsOnTargets="QsharpPropertyResolution" AfterTargets="QsharpPropertyResolution" BeforeTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <PackageReference Condition="'$(ResolvedQsharpExecutionTarget)' == 'SimulatorBackend'" Include="Microsoft.Quantum.Simulators" Version="0.10.1911.1607" IsImplicitlyDefined="true" />  <!-- TODO: check that our release build replaces the version correctly -->
    </ItemGroup>
  </Target>     

  <!-- Resolution of verified configurable properties. -->
  <Target Name="QsharpPropertyResolution" BeforeTargets="QsharpTargetDependentReferences">
    <!-- resolving the OutputType to either QsharpExe or QsharpLibrary -->
    <Choose>
      <When Condition="'$(OutputType)' == 'Library'">
        <PropertyGroup>
          <ResolvedQsharpOutputType>QsharpLibrary</ResolvedQsharpOutputType>
        </PropertyGroup>
      </When>
      <When Condition="'$(OutputType)' == 'Exe'">
        <PropertyGroup>
          <ResolvedQsharpOutputType>QsharpExe</ResolvedQsharpOutputType>
        </PropertyGroup>
      </When>
      <Otherwise>
        <PropertyGroup>
          <ResolvedQsharpOutputType></ResolvedQsharpOutputType>
          <ValidOutputTypes>Possible values are 'Exe', or 'Library'.</ValidOutputTypes>
        </PropertyGroup>
      </Otherwise>
    </Choose>
    <!-- resolving the ExecutionTarget to either SimulatorBackend or QuantumProcessorBackend -->
    <Choose>
      <When Condition="'$(ExecutionTarget)' == 'Any' Or '$(ExecutionTarget)' == 'QuantumSimulator' Or '$(ExecutionTarget)' == 'ToffoliSimulator' Or '$(ExecutionTarget)' == 'TraceSimulator'">
        <PropertyGroup>
          <ResolvedQsharpExecutionTarget>SimulatorBackend</ResolvedQsharpExecutionTarget>
          <CsharpGeneration>True</CsharpGeneration>
        </PropertyGroup>
      </When>
      <When Condition="'$(ExecutionTarget)' == 'QuantumProcessor'"> <!-- TODO: replace that -->
        <PropertyGroup>
          <ResolvedQsharpExecutionTarget>QuantumProcessorBackend</ResolvedQsharpExecutionTarget>
        </PropertyGroup>
      </When>
      <Otherwise>
        <PropertyGroup>
          <ResolvedQsharpExecutionTarget></ResolvedQsharpExecutionTarget>
          <ValidExecutionTargets>Possible values are 'QuantumSimulator', 'ToffoliSimulator', 'TraceSimulator', or 'QuantumProcessor'.</ValidExecutionTargets>
        </PropertyGroup>
      </Otherwise>
    </Choose>
  </Target>     

  <!-- Sets all unspecified properties configuring the paths for output generated during Q# compilation. -->
  <Target Name="ResolveQscOutputPaths" AfterTargets="QsharpPropertyResolution">
    <PropertyGroup>
      <!-- path compatible assembly name -->
      <PathCompatibleAssemblyName>$([System.String]::Copy('$(AssemblyName)').Replace(' ',''))</PathCompatibleAssemblyName>
      <!-- output path for files generated during compilation -->
      <GeneratedFilesOutputPath Condition="'$(GeneratedFilesOutputPath)' == ''">$(BaseIntermediateOutputPath)qsharp</GeneratedFilesOutputPath>
      <GeneratedFilesOutputPath Condition="!HasTrailingSlash('$(GeneratedFilesOutputPath)')">$(GeneratedFilesOutputPath)\</GeneratedFilesOutputPath>    
      <!-- output path for generating documentation -->
      <QsharpDocsOutputPath Condition="'$(QsharpDocsOutputPath)' == ''">$(GeneratedFilesOutputPath)docs\</QsharpDocsOutputPath>
      <QscDocsGenerationFlag Condition="$(QsharpDocsGeneration)">--doc $(QsharpDocsOutputPath)</QscDocsGenerationFlag>
      <!-- output path for generated C# files -->
      <CsharpSrcOutputPath Condition="'$(CsharpSrcOutputPath)' == ''">$(GeneratedFilesOutputPath)src\</CsharpSrcOutputPath>
    </PropertyGroup>
  </Target>

</Project>
