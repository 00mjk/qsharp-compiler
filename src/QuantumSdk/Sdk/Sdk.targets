<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Work around issues in MSBuild versions prior to 16.0. -->
  <PropertyGroup>
    <MSBuildAllProjects Condition=" '$(MSBuildVersion)' == '' Or '$(MSBuildVersion)' &lt; '16.0' ">
      $(MSBuildAllProjects);$(MSBuildThisFileFullPath)
    </MSBuildAllProjects>
  </PropertyGroup>

  <Import Project="$(MSBuildThisFileDirectory)..\DefaultItems\DefaultItems.targets"/>
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk"/>
  <Import Project="$(MSBuildThisFileDirectory)..\ProjectSystem\ProjectSystem.targets"/>


  <!-- Target used to enforce that the compilation is rebuilt when Q# source files are changed. -->
  <Target Name="RecompileOnChange">
    <ItemGroup>
      <UpToDateCheckInput Include="@(QsharpCompile)" />
    </ItemGroup>
  </Target>


  <!-- Target used to verify that the specified OutputType is valid. -->
  <Target Name="VerifyOutputType" DependsOnTargets="QsharpPropertyResolution" BeforeTargets="QsharpCompile">
    <Error Condition = "'$(OutputType)' == ''" Text="Missing OutputType. $(ValidOutputTypes)" />
    <Error Condition = "'$(ResolvedQsharpOutputType)' == '' And '$(OutputType)' != ''" Text="Invalid OutputType '$(OutputType)'. $(ValidOutputTypes)" />
  </Target>

  <!-- Target used to verify that the specified ExecutionTarget is valid. -->
  <Target Name="VerifyExecutionTarget" DependsOnTargets="QsharpPropertyResolution" BeforeTargets="QsharpCompile">
    <Error Condition = "'$(ExecutionTarget)' == ''" Text="Missing ExecutionTarget. $(ValidExecutionTargets)" />
    <Error Condition = "'$(ResolvedQsharpExecutionTarget)' == '' And '$(ExecutionTarget)' != ''" Text="Invalid ExecutionTarget '$(ExecutionTarget)'. $(ValidExecutionTargets)" />
  </Target>


  <!-- Removes all files in the specified GeneratedFilesOutputPath. -->
  <Target Name="QsharpClean" DependsOnTargets="ResolveQscOutputPaths" BeforeTargets="Clean">
    <ItemGroup>
      <FilesToRemove Include="$(GeneratedFilesOutputPath)**" />
      <Compile Remove="$(FilesToRemove)**\*.g.cs" />
    </ItemGroup>
    <Delete Files="@(FilesToRemove)" />
  </Target>  

  <!-- Invokes the Q# command line compiler to build the project. -->
  <Target Name="QsharpCompile" Condition="'$(DesignTimeBuild)' != 'true'" DependsOnTargets="ResolveAssemblyReferences;ResolveQscReferences;ResolveQscOutputPaths" BeforeTargets="CoreCompile">
    <MakeDir Condition="$(CsharpGeneration)" Directories="$(CsharpSrcOutputPath)" /> 
    <MakeDir Condition="$(QsharpDocsGeneration)" Directories="$(QsharpDocsOutputPath)" />
    <!-- generate a suitable build configuration for the Q# command line compiler (qsc) -->
    <PropertyGroup>
      <_BuildConfigGenerationQscReferencesFlag Condition="@(ResolvedQscReferences->Count()) &gt; 0">--QscReferences "@(ResolvedQscReferencesAndPriorities,'" "')"</_BuildConfigGenerationQscReferencesFlag>
      <QscBuildConfigGeneration>$(QscBuildConfigExe) $(_BuildConfigGenerationQscReferencesFlag)</QscBuildConfigGeneration>
    </PropertyGroup>
    <Exec Command="$(QscBuildConfigGeneration)" IgnoreExitCode="false" /> 
    <!-- get the resolved Q# references and the qsc build configuration -->
    <ReadLinesFromFile File="@(MyTextFile)" > <!-- FIXME: FILE NAME -->
        <Output TaskParameter="Lines" ItemName="_PrioritizedResolvedQscReferences"/>
    </ReadLinesFromFile>
    <ItemGroup>
      <ResolvedQsharpReferences Include="@(ReferencePath)" Exclude="@(QscPackageReference)"
        Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(%(FullPath), '(?i)system.|mscorlib|netstandard.library|microsoft.netcore.app')) == false" />
    </ItemGroup>
    <!-- invoke the Q# command line compiler -->
    <PropertyGroup>
      <!-- TODO: USE @(MyItem->Distinct()) OR POSSIBLY @(MyItem->DistinctWithCase()) -->
      <_QscCommandVerbosityFlag Condition="'$(QscVerbosity)' == 'Detailed' Or '$(QscVerbosity)' == 'Diagnostic'">-v</_QscCommandVerbosityFlag>
      <_QscCommandDocsFlag Condition="$(QsharpDocsGeneration)">--doc $(QsharpDocsOutputPath)</_QscCommandDocsFlag>
      <_QscCommandInputFlag Condition="@(QsharpCompile->Count()) &gt; 0">--input "@(QsharpCompile,'" "')"</_QscCommandInputFlag>
      <_QscCommandOutputFlag Condition="'$(CsharpSrcOutputPath)' != ''">--output $(CsharpSrcOutputPath)</_QscCommandOutputFlag> <!-- FIXME: path - and quotes??  -->
      <_QscCommandReferencesFlag Condition="@(ResolvedQsharpReferences->Count()) &gt; 0">--references "@(ResolvedQsharpReferences,'" "')"</_QscCommandReferencesFlag>
      <_QscCommandLoadFlag Condition="@(_PrioritizedResolvedQscReferences->Count()) &gt; 0">--load "@(_PrioritizedResolvedQscReferences,'" "')"</_QscCommandLoadFlag>
      <QscCommand>$(QscExe) build --proj "$(PathCompatibleAssemblyName)" --format MsBuild $(_QscCommandVerbosityFlag) $(_QscCommandDocsFlag) $(_QscCommandInputFlag) $(_QscCommandOutputFlag) $(_QscCommandReferencesFlag) $(_QscCommandLoadFlag)</QscCommand>
    </PropertyGroup>
    <WriteLinesToFile File="$(GeneratedFilesOutputPath)qsc-command.txt" Lines=":: files ::;@(QsharpCompile);:: qsim ::;$(SimulationTarget);;:: references ::;@(ResolvedQsharpReferences);:: loaded ::;@(_PrioritizedResolvedQscReferences);:: command ::;$(QscCommand)" Overwrite="true"/>
    <Exec Command="$(QscCommand)" IgnoreExitCode="false" /> 
    <!-- configure the dll built by the C# compiler -->
    <Delete Files="$(GeneratedFilesOutputPath)$(PathCompatibleAssemblyName).bson" />
    <ItemGroup>
      <EmbeddedResource Include="$(CsharpSrcOutputPath)\$(PathCompatibleAssemblyName).bson" LogicalName="__qsharp_data__.bson" Visible="false" />
      <Compile Condition="$(CsharpGeneration)" Include="$(GenFilesDir)**\*.g.cs" Exclude="@(Compile)" />
    </ItemGroup>
  </Target>   

</Project>

